name: Deploy to AWS ECS (Prod)

on:
  push:
    tags:
      - 'prod-*'   # Semua tag prod akan trigger workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3️⃣ Build project
      - name: Build with Gradle
        run: gradle clean bootJar --no-daemon

      # 4️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5️⃣ Login to ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 6️⃣ Build & Push Docker image
      - name: Build & Push Docker image
        run: |
          IMAGE_TAG=${GITHUB_REF#refs/tags/}
          AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          ECR_REPO=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/crud-app
          ECR_IMAGE=$ECR_REPO:$IMAGE_TAG

          echo "Building Docker image: $ECR_IMAGE"
          docker build -t $ECR_IMAGE .
          docker push $ECR_IMAGE

      # 7️⃣ Register new ECS task definition
      - name: Register new ECS task definition
        run: |
          IMAGE_TAG=${GITHUB_REF#refs/tags/}
          ECR_IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/crud-app:$IMAGE_TAG

          aws ecs register-task-definition \
            --family hk \
            --requires-compatibilities EC2 \
            --network-mode bridge \
            --cpu 512 --memory 1024 \
            --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
            --container-definitions "[
              {
                \"name\": \"hk\",
                \"image\": \"$ECR_IMAGE\",
                \"essential\": true,
                \"portMappings\": [
                  {\"containerPort\": 8080,\"hostPort\": 5000, \"protocol\": \"tcp\"}
                ],
                \"logConfiguration\": {
                  \"logDriver\": \"awslogs\",
                  \"options\": {
                    \"awslogs-group\": \"/hk\",
                    \"awslogs-region\": \"${{ secrets.AWS_REGION }}\",
                    \"awslogs-stream-prefix\": \"ecs\"
                  }
                },
                \"environment\": [
                  {\"name\": \"SPRING_PROFILES_ACTIVE\", \"value\": \"prod\"},
                  {\"name\": \"RDS_HOST\", \"value\": \"${{ secrets.RDS_HOST }}\"},
                  {\"name\": \"RDS_PORT\", \"value\": \"3306\"},
                  {\"name\": \"RDS_DB\", \"value\": \"pos-api\"},
                  {\"name\": \"RDS_USERNAME\", \"value\": \"${{ secrets.RDS_USERNAME }}\"},
                  {\"name\": \"RDS_PASSWORD\", \"value\": \"${{ secrets.RDS_PASSWORD }}\"}
                ]
              }
            ]"
      

      # 8️⃣ Update ECS service
      - name: Update ECS Service
        run: |
          AWS_REGION=${{ secrets.AWS_REGION }}
          TASK_DEF_ARN=$(aws ecs list-task-definitions \
            --family-prefix hk \
            --sort DESC \
            --query 'taskDefinitionArns[0]' \
            --output text)

          echo "Updating service web-app to use task definition: $TASK_DEF_ARN"

          aws ecs update-service \
            --cluster hk \
            --service hk-service \
            --task-definition $TASK_DEF_ARN \
            --force-new-deployment \
            --region $AWS_REGION
